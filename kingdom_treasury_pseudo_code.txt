Contract KingdomTreasury inherits BaseTreasury:
    Variable king: Address
    Variable totalFunds: UInt256
    
    Struct Citizen:
        balance: UInt256
        isCitizen: Boolean
    
    Mapping citizens: Address -> Citizen
    
    Modifier onlyKing:
        Require msg.sender == king
    
    Modifier onlyCitizen:
        Require citizens[msg.sender].isCitizen
    
    Constructor:
        Set king to msg.sender
    
    Function becomeCitizen() -> void:
        Require citizens[msg.sender].isCitizen == False
        Set citizens[msg.sender] to Citizen(0, True)
    
    Function deposit() -> void:
        Require onlyCitizen
        Increase citizens[msg.sender].balance by msg.value
        Increase totalFunds by msg.value
        Emit Deposit(citizen: msg.sender, amount: msg.value)
    
    Function withdraw(amount: UInt256) -> void:
        Require onlyCitizen
        If citizens[msg.sender].balance < amount:
            Revert with InsufficientFunds(requested: amount, available: citizens[msg.sender].balance)
        Decrease citizens[msg.sender].balance by amount
        Decrease totalFunds by amount
        Call transferFunds(recipient: msg.sender, amount: amount)
        Emit Withdraw(citizen: msg.sender, amount: amount)
    
    Function declareHoliday() -> void:
        Require onlyKing
        Emit HolidayDeclared(message: "A holiday has been declared by the king!")
    
    Function getBlockTimestamp() -> UInt256:
        Return current block timestamp
    
    Function checkBalance(citizen: Address) -> String:
        If citizens[citizen].balance > 1 ether:
            Return "Wealthy citizen"
        Else:
            Return "Regular citizen"
    
    Function addCitizenToList(citizen: Address) -> void:
        Require onlyKing
        Add citizen to citizenList
    
    Function getCitizenInfo(citizen: Address) -> (UInt256, Boolean):
        Return citizens[citizen].balance, citizens[citizen].isCitizen
    
    Event Deposit(citizen: Address, amount: UInt256)
    Event Withdraw(citizen: Address, amount: UInt256)
    Event HolidayDeclared(message: String)
    
    Function kingdomBalance() -> UInt256:
        Return contract balance
    
    Error InsufficientFunds(requested: UInt256, available: UInt256)
    
    Function callAnotherContract(otherContract: Address) -> void:
        Call IReceiver(otherContract).receiveMessage("Hello from KingdomTreasury")
